spring:
  application:
    name: courier-tracker
  
  # Database Configuration (H2 default, PostgreSQL available)
  datasource:
    url: ${DATASOURCE_URL:jdbc:h2:mem:courierdb;DB_CLOSE_DELAY=-1}
    driver-class-name: ${DATASOURCE_DRIVER:org.h2.Driver}
    username: ${DATASOURCE_USERNAME:admin}
    password: ${DATASOURCE_PASSWORD:admin}
    hikari:
      maximum-pool-size: 10
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: ${SHOW_SQL:true}
    properties:
      hibernate:
        format_sql: true
        dialect: ${HIBERNATE_DIALECT:org.hibernate.dialect.H2Dialect}
  
  # H2 Console (only for development)
  h2:
    console:
      enabled: ${H2_CONSOLE_ENABLED:true}
      path: /h2-console
      settings:
        trace: false
        web-allow-others: true
  
  # Kafka Configuration
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: courier-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.sakaci.couriertracking.domain"
        spring.json.value.default.type: com.sakaci.couriertracking.event.LocationUpdateEvent
  
  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      timeout: 5000
  
  # Cache Configuration
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=500,expireAfterWrite=1h
    redis:
      time-to-live: 10m

# Application-specific properties
app:
  store-data-file: classpath:stores.json
  proximity-threshold-meters: 100
  reentry-minutes-threshold: 1
  kafka:
    topics:
      location-updates: courier-locations
      store-entrances: store-entrance-events
      location-updates-dlq: location-update-topic.dlq
      store-entrances-dlq: store-entrance-topic.dlq

# Actuator Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,kafka
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true

server:
  port: 8080
  